Rigidbody
Mass : 물체의 질량
Linear Damping :  수치가 클수록 물체의 속도가 느려짐.
Angular Damping : 회전 감속에 대한 처리

Automatic Center of Mass : 중앙 설정
이 체크가 진행되어있으면 일반 시스템 대로 처리

Automatic Tensor : 관성 수치에 대한 설정을 자동으로
수치 조절을 통해 관성 값이 높을 수록 회전에 더 많은
값이 요구됨.

Use Gravity :  중력 효과에 대한 처리를 제공
                 체크를 안하면 중력에 의한 y축 이동이 해제

Is Kinematic : 키네마틱에 대한 설정을 진행할 수 있습니다.
체크를 안할 경우, 물리 기반의 움직임으로 처리됩니다.

체크를 진행할 경우 키네마틱의 움직임으로 처리됩니다.
물리 시스템에 의한 오브젝트의 움직임과 회전을 진행할 수
없습니다. 유니티에서 Transform을 통한 움직임과 회전으로
처리할 수 있습니다.


Interpolate : 보간 / 외삽 적용
None :  기본 옵션

Interpolate : 두 물리 업데이트에서 리지드바디의 위치, 속도를 이용해
                 현재 프레임에서의 위치를 계산하고 적용하는 방식
ex) 리지드바디의 속도가 변하거나 리지드바디의 움직임에 영향을 주는
다른 요소가 존재하는 경우에는 이 방식으로 계산하는 것이 효과적입니다.

※ 보간(내삽) : 새 점을 만들기 위한 수많은 점을 평균화하는 것
--> 두 점을 연결하는 방법(궤적에 대한 생성)

Extrapolate : 이전 물리 업데이트에서 위치와 속도를 사용해 다음 물리 업데이트
에서의 위치를 예측하여 처리합니다.
--> 기존 위치보다 약간 앞서 움직이는 것처럼 보여지며 이는 정확도가 크게
필요 없는 상황에서 자주 사용됩니다.

---> 고속으로 움직이는 오브젝트에 대하여 카메라가 따라가는등의 상황


※ 보외(외삽) : 기존의 관찰범위를 넘어 다른 변수와의 관계를 기초해
                   변수의 값을 추정하는 방식
Collision Detection : 물리시스템이 콜라이더와 씬 내의 다른 콜라이더 간의 충돌에 대한 정의
설정에 따라 다음과 같이 처리 됩니다.
Discrete :  기본 설정 . 특징 : 리소스를 많이 사용 안함. 빠르게 움직이는 충돌에 관여하지 않는 상황
불연속 충돌 검사

Continuous : 
스위핑 기반의 CCD(Continuous Collision Detection) : 주로 너무 빨라서 물체가 벽이나 오브젝트를
뚫고 지나가는 현상에 대한 방지를 위한 충돌 감지 기법
위치를 연속적으로 검사해서 충돌 감지
무엇이 닿앗는지 검사하고, 닿으면 중간 지점에서 멈추고 충돌을 처리하게 됩니다.

스위핑 기반으로 리지드 바디의 콜라이더와 정적 콜라이더 간의 충돌을 계산합니다.
                 빠르게 움직이는 충돌에 대한 체크 시 사용하며,  이 경우 리소스를 많이 사용하게 됩니다.
Continuous Dynamic :
콜라이더 계산에서 Discrete 충돌로 설정된 콜라이더를 제외한 나머지의 모든 콜라이더와의 계산을
처리합니다.
Continuous Speculative :
추측성 충돌 검사, 이 리지드바디의 콜라이더와 모든 콜라이더 간의 충돌을 계산해서 사용되며
충돌 자체에 대한 정확도가 크게 중요하지 않은 경우

Constraints : 제약 조건(움직임이나 회전에 대한 설정)
                 체크를 진행하면 그 작업에 대한 처리가 안되게

Layer Overrides : 레이어 포함, 제외 설정을 진행합니다.



angularVelocity : 회전 속도
linearVelocity   : 물체 속도

IEnumerator : 유니티에서 코루틴을 만들기 위한
핵심 인터페이스

일시 중단이 가능한 함수를 정의하는 데 사용되는
타입으로써 사용됩니다.

유니티의 일반적인 움직임(프레임 단위 동작)
으로는 애니메이션이 끝날때까지 대기하거나
몇 초 뒤 작업 등을 처리하는게 불가능함.

유니티에서는 코루틴을 통해 저 작업을 진행합니다.

C#에서의 IEnumerator는 컬렉션에 대한 순회 문법
용 인터페이스로 출발했음.

코루틴 설계의 전제 조건
루프에 대한 탈출 , 실행
이 과정은 순회를 통해 예약해서 처리하는 방식
yield return <- 이 필요하다.


yield return null : 다음 프레임까지 대기하는 코드
new WaitForEndOfFrame();
프레임 끝까지 대기
new WaitForFixedUpdate();
FixedUpdate() 처리가 끝날때까지 대기
new WaitForSeconds(float t);
//적은 수치만큼의 대기 (초 단위)
new WaitForSecondsRealtime(float t);
//적은 수치만큼의 대기 (초 단위)
//게임 시간(Time.timeScale)이 아닌 실제 시간
(RealTime)을 기준으로 지연하는 코드


이벤트 함수 Update()

Update : 스크립트가 enabled 상태 일 때, 매 프레임
마다 호출을 진행합니다.

FixedUpdate : 주로 물리 효과(Rigidbody) 오브젝트에
대한 조정을 진행할 때 사용하는 Update입니다.
Fixed TimeStep에 설정된 값에 따라 일정 간격으로
호출됩니다.

Edit -> Project Settings를 통해 설정할 수 있는
시간 관련 코드

Fixed TimeStep : Fixed Update 이벤트 수행 시기
Maximum Allowed Timestep : 최대치
Time Scale : 시간이 흐르는 속도
                 0 : 멈춤
                 1 : 실시간
                 0.5 : 절반 값
                 2 : 2배
Maximum Particle Timestep : 파티클 시뮬레이션 정확도
이 수치를 넘게 프레임 시간이 처리되면 각 단계의 시간이
해당 값을 초과하지 않게 파티클에 대한 업데이트가
여러번 처리되게 설정합니다.

LateUpdate
Update가 끝난 후 프레임 당 한번 씩 호출되는 함수
주로 3인칭 카메라를 작업할 때 사용됩니다.

유니티 메카님(mecanim)
유니티에서 제공해주는 애니메이션 상태 머신 시스템을
의미합니다.

상태를 만들어서 재생 관리하고, 트랜지션을 통해
다른 상태로 넘어갈 수 있습니다.

Rig 가 있는 .fbx 파일에 대한 import를 통해 사용

Humanoid 타입 
팔 2개 다리 2개 머리 1개로 설정된 메쉬 오브젝트
리타겟팅이 가능합니다.
(같은 휴머노이드라면, 애니메이션에 대한 공유가
가능합니다.)

Generic 타입
4족 보행, 슬라임 등등

애니메이터
컨트롤러를 통해 애니메이션의 전환을 담당하는 역할
일반적으로 .fbx 파일을 임포트해서 만든 프리팹의
경우 자동으로 붙어있음.
Controller : 컨트롤러 등록
Avater : 애니메이션 Rig(뼈,모델) 등록
Apply Root Motion : 애니메이션 루트에 따라
게임 오브젝트가 같이 이동될 지를 결정합니다.
(보통 코드로 움직임을 계산해서 작업하는 경우라면
이 설정은 처리하지 않습니다.)

--> 애니메이션이 자체적으로 움직이는 경우?
      (체크한다.)
      그 이외라면 꺼둔다.

Animate Physics  : 애니메이터는 FixedUpdate
호출에 따라 업데이트된다. 리지드 바디
오브젝트를 밀어 움직이는 등의 물리적
상호작용 애니메이션 설정 시에는 체크

Update Mode
애니메이션 업데이트에 대한 처리와
타임스케일 사용 여부 선택

Normal : 애니메이터의 속도는 타임스케일과 일치
Unscaled Time : 타임 스케일을 무시하고 항상
100%의 속도로만 애니메이면 처리를 진행합니다.

게임 플레이가 정지, 타임 스케일이 조정된 상황에서
별도로 애니메이션만 따로 나오게 처리

Culling Mode : 애니메이션에 대한 컬링 모드 설정
                  (카메라 최적화 관련 코드)
Always Animate : 항상 애니메이션화
Cull Update Transforms : 렌더러가 보이지 않을 경우
리타켓팅, IK , 트랜스폼 등의 비활성화
Cull Completely : 렌더러가 보이지 않을 때 애니메이션
비활성화

Culling : 카메라에 보이지 않거나 필요하지 않은
오브젝트의 애니메이션 계산을 생략하는 작업

IK : 애니메이션에서 뼈를 제어하는 기술
































